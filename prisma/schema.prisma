generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin_permissions {
  id                                                       Int                            @id @default(autoincrement()) @db.UnsignedInt
  action                                                   String?                        @db.VarChar(255)
  subject                                                  String?                        @db.VarChar(255)
  properties                                               Json?
  conditions                                               Json?
  created_at                                               DateTime?                      @db.DateTime(6)
  updated_at                                               DateTime?                      @db.DateTime(6)
  created_by_id                                            Int?                           @db.UnsignedInt
  updated_by_id                                            Int?                           @db.UnsignedInt
  admin_users_admin_permissions_created_by_idToadmin_users admin_users?                   @relation("admin_permissions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "admin_permissions_created_by_id_fk")
  admin_users_admin_permissions_updated_by_idToadmin_users admin_users?                   @relation("admin_permissions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "admin_permissions_updated_by_id_fk")
  admin_permissions_role_links                             admin_permissions_role_links[]

  @@index([created_by_id], map: "admin_permissions_created_by_id_fk")
  @@index([updated_by_id], map: "admin_permissions_updated_by_id_fk")
}

model admin_permissions_role_links {
  id                Int                @id @default(autoincrement()) @db.UnsignedInt
  permission_id     Int?               @db.UnsignedInt
  role_id           Int?               @db.UnsignedInt
  permission_order  Float?
  admin_permissions admin_permissions? @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admin_permissions_role_links_fk")
  admin_roles       admin_roles?       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admin_permissions_role_links_inv_fk")

  @@unique([permission_id, role_id], map: "admin_permissions_role_links_unique")
  @@index([permission_id], map: "admin_permissions_role_links_fk")
  @@index([role_id], map: "admin_permissions_role_links_inv_fk")
  @@index([permission_order], map: "admin_permissions_role_links_order_inv_fk")
}

model admin_roles {
  id                                                 Int                            @id @default(autoincrement()) @db.UnsignedInt
  name                                               String?                        @db.VarChar(255)
  code                                               String?                        @db.VarChar(255)
  description                                        String?                        @db.VarChar(255)
  created_at                                         DateTime?                      @db.DateTime(6)
  updated_at                                         DateTime?                      @db.DateTime(6)
  created_by_id                                      Int?                           @db.UnsignedInt
  updated_by_id                                      Int?                           @db.UnsignedInt
  admin_permissions_role_links                       admin_permissions_role_links[]
  admin_users_admin_roles_created_by_idToadmin_users admin_users?                   @relation("admin_roles_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "admin_roles_created_by_id_fk")
  admin_users_admin_roles_updated_by_idToadmin_users admin_users?                   @relation("admin_roles_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "admin_roles_updated_by_id_fk")
  admin_users_roles_links                            admin_users_roles_links[]

  @@index([created_by_id], map: "admin_roles_created_by_id_fk")
  @@index([updated_by_id], map: "admin_roles_updated_by_id_fk")
}

model admin_users {
  id                                                                                             Int                                 @id @default(autoincrement()) @db.UnsignedInt
  firstname                                                                                      String?                             @db.VarChar(255)
  lastname                                                                                       String?                             @db.VarChar(255)
  username                                                                                       String?                             @db.VarChar(255)
  email                                                                                          String?                             @db.VarChar(255)
  password                                                                                       String?                             @db.VarChar(255)
  reset_password_token                                                                           String?                             @db.VarChar(255)
  registration_token                                                                             String?                             @db.VarChar(255)
  is_active                                                                                      Boolean?
  blocked                                                                                        Boolean?
  prefered_language                                                                              String?                             @db.VarChar(255)
  created_at                                                                                     DateTime?                           @db.DateTime(6)
  updated_at                                                                                     DateTime?                           @db.DateTime(6)
  created_by_id                                                                                  Int?                                @db.UnsignedInt
  updated_by_id                                                                                  Int?                                @db.UnsignedInt
  admin_permissions_admin_permissions_created_by_idToadmin_users                                 admin_permissions[]                 @relation("admin_permissions_created_by_idToadmin_users")
  admin_permissions_admin_permissions_updated_by_idToadmin_users                                 admin_permissions[]                 @relation("admin_permissions_updated_by_idToadmin_users")
  admin_roles_admin_roles_created_by_idToadmin_users                                             admin_roles[]                       @relation("admin_roles_created_by_idToadmin_users")
  admin_roles_admin_roles_updated_by_idToadmin_users                                             admin_roles[]                       @relation("admin_roles_updated_by_idToadmin_users")
  admin_users_admin_users_created_by_idToadmin_users                                             admin_users?                        @relation("admin_users_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "admin_users_created_by_id_fk")
  other_admin_users_admin_users_created_by_idToadmin_users                                       admin_users[]                       @relation("admin_users_created_by_idToadmin_users")
  admin_users_admin_users_updated_by_idToadmin_users                                             admin_users?                        @relation("admin_users_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "admin_users_updated_by_id_fk")
  other_admin_users_admin_users_updated_by_idToadmin_users                                       admin_users[]                       @relation("admin_users_updated_by_idToadmin_users")
  admin_users_roles_links                                                                        admin_users_roles_links[]
  appointments_appointments_created_by_idToadmin_users                                           appointments[]                      @relation("appointments_created_by_idToadmin_users")
  appointments_appointments_updated_by_idToadmin_users                                           appointments[]                      @relation("appointments_updated_by_idToadmin_users")
  branch_offices_branch_offices_created_by_idToadmin_users                                       branch_offices[]                    @relation("branch_offices_created_by_idToadmin_users")
  branch_offices_branch_offices_updated_by_idToadmin_users                                       branch_offices[]                    @relation("branch_offices_updated_by_idToadmin_users")
  companies_companies_created_by_idToadmin_users                                                 companies[]                         @relation("companies_created_by_idToadmin_users")
  companies_companies_updated_by_idToadmin_users                                                 companies[]                         @relation("companies_updated_by_idToadmin_users")
  conversations_conversations_created_by_idToadmin_users                                         conversations[]                     @relation("conversations_created_by_idToadmin_users")
  conversations_conversations_updated_by_idToadmin_users                                         conversations[]                     @relation("conversations_updated_by_idToadmin_users")
  doctors_doctors_created_by_idToadmin_users                                                     doctors[]                           @relation("doctors_created_by_idToadmin_users")
  doctors_doctors_updated_by_idToadmin_users                                                     doctors[]                           @relation("doctors_updated_by_idToadmin_users")
  files_files_created_by_idToadmin_users                                                         files[]                             @relation("files_created_by_idToadmin_users")
  files_files_updated_by_idToadmin_users                                                         files[]                             @relation("files_updated_by_idToadmin_users")
  google_events_google_events_created_by_idToadmin_users                                         google_events[]                     @relation("google_events_created_by_idToadmin_users")
  google_events_google_events_updated_by_idToadmin_users                                         google_events[]                     @relation("google_events_updated_by_idToadmin_users")
  i18n_locale_i18n_locale_created_by_idToadmin_users                                             i18n_locale[]                       @relation("i18n_locale_created_by_idToadmin_users")
  i18n_locale_i18n_locale_updated_by_idToadmin_users                                             i18n_locale[]                       @relation("i18n_locale_updated_by_idToadmin_users")
  patients_patients_created_by_idToadmin_users                                                   patients[]                          @relation("patients_created_by_idToadmin_users")
  patients_patients_updated_by_idToadmin_users                                                   patients[]                          @relation("patients_updated_by_idToadmin_users")
  payment_states_payment_states_created_by_idToadmin_users                                       payment_states[]                    @relation("payment_states_created_by_idToadmin_users")
  payment_states_payment_states_updated_by_idToadmin_users                                       payment_states[]                    @relation("payment_states_updated_by_idToadmin_users")
  specialities_specialities_created_by_idToadmin_users                                           specialities[]                      @relation("specialities_created_by_idToadmin_users")
  specialities_specialities_updated_by_idToadmin_users                                           specialities[]                      @relation("specialities_updated_by_idToadmin_users")
  strapi_api_token_permissions_strapi_api_token_permissions_created_by_idToadmin_users           strapi_api_token_permissions[]      @relation("strapi_api_token_permissions_created_by_idToadmin_users")
  strapi_api_token_permissions_strapi_api_token_permissions_updated_by_idToadmin_users           strapi_api_token_permissions[]      @relation("strapi_api_token_permissions_updated_by_idToadmin_users")
  strapi_api_tokens_strapi_api_tokens_created_by_idToadmin_users                                 strapi_api_tokens[]                 @relation("strapi_api_tokens_created_by_idToadmin_users")
  strapi_api_tokens_strapi_api_tokens_updated_by_idToadmin_users                                 strapi_api_tokens[]                 @relation("strapi_api_tokens_updated_by_idToadmin_users")
  strapi_transfer_token_permissions_strapi_transfer_token_permissions_created_by_idToadmin_users strapi_transfer_token_permissions[] @relation("strapi_transfer_token_permissions_created_by_idToadmin_users")
  strapi_transfer_token_permissions_strapi_transfer_token_permissions_updated_by_idToadmin_users strapi_transfer_token_permissions[] @relation("strapi_transfer_token_permissions_updated_by_idToadmin_users")
  strapi_transfer_tokens_strapi_transfer_tokens_created_by_idToadmin_users                       strapi_transfer_tokens[]            @relation("strapi_transfer_tokens_created_by_idToadmin_users")
  strapi_transfer_tokens_strapi_transfer_tokens_updated_by_idToadmin_users                       strapi_transfer_tokens[]            @relation("strapi_transfer_tokens_updated_by_idToadmin_users")
  up_permissions_up_permissions_created_by_idToadmin_users                                       up_permissions[]                    @relation("up_permissions_created_by_idToadmin_users")
  up_permissions_up_permissions_updated_by_idToadmin_users                                       up_permissions[]                    @relation("up_permissions_updated_by_idToadmin_users")
  up_roles_up_roles_created_by_idToadmin_users                                                   up_roles[]                          @relation("up_roles_created_by_idToadmin_users")
  up_roles_up_roles_updated_by_idToadmin_users                                                   up_roles[]                          @relation("up_roles_updated_by_idToadmin_users")
  up_users_up_users_created_by_idToadmin_users                                                   up_users[]                          @relation("up_users_created_by_idToadmin_users")
  up_users_up_users_updated_by_idToadmin_users                                                   up_users[]                          @relation("up_users_updated_by_idToadmin_users")
  upload_folders_upload_folders_created_by_idToadmin_users                                       upload_folders[]                    @relation("upload_folders_created_by_idToadmin_users")
  upload_folders_upload_folders_updated_by_idToadmin_users                                       upload_folders[]                    @relation("upload_folders_updated_by_idToadmin_users")

  @@index([created_by_id], map: "admin_users_created_by_id_fk")
  @@index([updated_by_id], map: "admin_users_updated_by_id_fk")
}

model admin_users_roles_links {
  id          Int          @id @default(autoincrement()) @db.UnsignedInt
  user_id     Int?         @db.UnsignedInt
  role_id     Int?         @db.UnsignedInt
  role_order  Float?
  user_order  Float?
  admin_users admin_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admin_users_roles_links_fk")
  admin_roles admin_roles? @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admin_users_roles_links_inv_fk")

  @@unique([user_id, role_id], map: "admin_users_roles_links_unique")
  @@index([user_id], map: "admin_users_roles_links_fk")
  @@index([role_id], map: "admin_users_roles_links_inv_fk")
  @@index([role_order], map: "admin_users_roles_links_order_fk")
  @@index([user_order], map: "admin_users_roles_links_order_inv_fk")
}

model appointments {
  id                                                  Int                                @id @default(autoincrement()) @db.UnsignedInt
  title                                               String?                            @db.VarChar(255)
  start_time                                          DateTime?                          @db.Time(3)
  end_time                                            DateTime?                          @db.Time(3)
  date                                                DateTime?                          @db.Date
  start_full_date                                     DateTime?                          @db.DateTime(6)
  end_full_date                                       DateTime?                          @db.DateTime(6)
  reminder_status                                     Json?
  created_at                                          DateTime?                          @db.DateTime(6)
  updated_at                                          DateTime?                          @db.DateTime(6)
  published_at                                        DateTime?                          @db.DateTime(6)
  created_by_id                                       Int?                               @db.UnsignedInt
  updated_by_id                                       Int?                               @db.UnsignedInt
  admin_users_appointments_created_by_idToadmin_users admin_users?                       @relation("appointments_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "appointments_created_by_id_fk")
  admin_users_appointments_updated_by_idToadmin_users admin_users?                       @relation("appointments_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "appointments_updated_by_id_fk")
  appointments_branch_office_links                    appointments_branch_office_links[]
  appointments_conversation_links                     appointments_conversation_links[]
  appointments_patient_links                          appointments_patient_links[]
  appointments_payment_state_links                    appointments_payment_state_links[]
  appointments_speciality_links                       appointments_speciality_links[]
  doctors_appointments_links                          doctors_appointments_links[]

  @@index([created_by_id], map: "appointments_created_by_id_fk")
  @@index([updated_by_id], map: "appointments_updated_by_id_fk")
}

model appointments_branch_office_links {
  id                Int             @id @default(autoincrement()) @db.UnsignedInt
  appointment_id    Int?            @db.UnsignedInt
  branch_office_id  Int?            @db.UnsignedInt
  appointment_order Float?
  appointments      appointments?   @relation(fields: [appointment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_branch_office_links_fk")
  branch_offices    branch_offices? @relation(fields: [branch_office_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_branch_office_links_inv_fk")

  @@unique([appointment_id, branch_office_id], map: "appointments_branch_office_links_unique")
  @@index([appointment_id], map: "appointments_branch_office_links_fk")
  @@index([branch_office_id], map: "appointments_branch_office_links_inv_fk")
  @@index([appointment_order], map: "appointments_branch_office_links_order_inv_fk")
}

model appointments_conversation_links {
  id              Int            @id @default(autoincrement()) @db.UnsignedInt
  appointment_id  Int?           @db.UnsignedInt
  conversation_id Int?           @db.UnsignedInt
  appointments    appointments?  @relation(fields: [appointment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_conversation_links_fk")
  conversations   conversations? @relation(fields: [conversation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_conversation_links_inv_fk")

  @@unique([appointment_id, conversation_id], map: "appointments_conversation_links_unique")
  @@index([appointment_id], map: "appointments_conversation_links_fk")
  @@index([conversation_id], map: "appointments_conversation_links_inv_fk")
}

model appointments_patient_links {
  id                Int           @id @default(autoincrement()) @db.UnsignedInt
  appointment_id    Int?          @db.UnsignedInt
  patient_id        Int?          @db.UnsignedInt
  appointment_order Float?
  appointments      appointments? @relation(fields: [appointment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_patient_links_fk")
  patients          patients?     @relation(fields: [patient_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_patient_links_inv_fk")

  @@unique([appointment_id, patient_id], map: "appointments_patient_links_unique")
  @@index([appointment_id], map: "appointments_patient_links_fk")
  @@index([patient_id], map: "appointments_patient_links_inv_fk")
  @@index([appointment_order], map: "appointments_patient_links_order_inv_fk")
}

model appointments_payment_state_links {
  id               Int             @id @default(autoincrement()) @db.UnsignedInt
  appointment_id   Int?            @db.UnsignedInt
  payment_state_id Int?            @db.UnsignedInt
  appointments     appointments?   @relation(fields: [appointment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_payment_state_links_fk")
  payment_states   payment_states? @relation(fields: [payment_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_payment_state_links_inv_fk")

  @@unique([appointment_id, payment_state_id], map: "appointments_payment_state_links_unique")
  @@index([appointment_id], map: "appointments_payment_state_links_fk")
  @@index([payment_state_id], map: "appointments_payment_state_links_inv_fk")
}

model appointments_speciality_links {
  id             Int           @id @default(autoincrement()) @db.UnsignedInt
  appointment_id Int?          @db.UnsignedInt
  speciality_id  Int?          @db.UnsignedInt
  appointments   appointments? @relation(fields: [appointment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_speciality_links_fk")
  specialities   specialities? @relation(fields: [speciality_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_speciality_links_inv_fk")

  @@unique([appointment_id, speciality_id], map: "appointments_speciality_links_unique")
  @@index([appointment_id], map: "appointments_speciality_links_fk")
  @@index([speciality_id], map: "appointments_speciality_links_inv_fk")
}

model branch_offices {
  id                                                    Int                                @id @default(autoincrement()) @db.UnsignedInt
  name                                                  String?                            @db.VarChar(255)
  branchid                                              String?                            @unique(map: "branch_offices_branchid_unique") @db.VarChar(255)
  created_at                                            DateTime?                          @db.DateTime(6)
  updated_at                                            DateTime?                          @db.DateTime(6)
  published_at                                          DateTime?                          @db.DateTime(6)
  created_by_id                                         Int?                               @db.UnsignedInt
  updated_by_id                                         Int?                               @db.UnsignedInt
  appointments_branch_office_links                      appointments_branch_office_links[]
  admin_users_branch_offices_created_by_idToadmin_users admin_users?                       @relation("branch_offices_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "branch_offices_created_by_id_fk")
  admin_users_branch_offices_updated_by_idToadmin_users admin_users?                       @relation("branch_offices_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "branch_offices_updated_by_id_fk")
  branch_offices_company_links                          branch_offices_company_links[]
  patients_branch_office_links                          patients_branch_office_links[]

  @@index([created_by_id], map: "branch_offices_created_by_id_fk")
  @@index([updated_by_id], map: "branch_offices_updated_by_id_fk")
}

model branch_offices_company_links {
  id                  Int             @id @default(autoincrement()) @db.UnsignedInt
  branch_office_id    Int?            @db.UnsignedInt
  company_id          Int?            @db.UnsignedInt
  branch_office_order Float?
  branch_offices      branch_offices? @relation(fields: [branch_office_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "branch_offices_company_links_fk")
  companies           companies?      @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "branch_offices_company_links_inv_fk")

  @@unique([branch_office_id, company_id], map: "branch_offices_company_links_unique")
  @@index([branch_office_id], map: "branch_offices_company_links_fk")
  @@index([company_id], map: "branch_offices_company_links_inv_fk")
  @@index([branch_office_order], map: "branch_offices_company_links_order_inv_fk")
}

model companies {
  id                                               Int                            @id @default(autoincrement()) @db.UnsignedInt
  name                                             String?                        @db.VarChar(255)
  created_at                                       DateTime?                      @db.DateTime(6)
  updated_at                                       DateTime?                      @db.DateTime(6)
  published_at                                     DateTime?                      @db.DateTime(6)
  created_by_id                                    Int?                           @db.UnsignedInt
  updated_by_id                                    Int?                           @db.UnsignedInt
  branch_offices_company_links                     branch_offices_company_links[]
  admin_users_companies_created_by_idToadmin_users admin_users?                   @relation("companies_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "companies_created_by_id_fk")
  admin_users_companies_updated_by_idToadmin_users admin_users?                   @relation("companies_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "companies_updated_by_id_fk")
  companies_users_links                            companies_users_links[]
  patients_company_links                           patients_company_links[]

  @@index([created_by_id], map: "companies_created_by_id_fk")
  @@index([updated_by_id], map: "companies_updated_by_id_fk")
}

model companies_users_links {
  id            Int        @id @default(autoincrement()) @db.UnsignedInt
  company_id    Int?       @db.UnsignedInt
  user_id       Int?       @db.UnsignedInt
  user_order    Float?
  company_order Float?
  companies     companies? @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "companies_users_links_fk")
  up_users      up_users?  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "companies_users_links_inv_fk")

  @@unique([company_id, user_id], map: "companies_users_links_unique")
  @@index([company_id], map: "companies_users_links_fk")
  @@index([user_id], map: "companies_users_links_inv_fk")
  @@index([user_order], map: "companies_users_links_order_fk")
  @@index([company_order], map: "companies_users_links_order_inv_fk")
}

model conversations {
  id                                                   Int                                @id @default(autoincrement()) @db.UnsignedInt
  init_message_id                                      String?                            @db.VarChar(255)
  conversation_id                                      String?                            @db.VarChar(255)
  wa_id                                                String?                            @db.VarChar(255)
  event_id                                             String?                            @db.VarChar(255)
  reminder_reply_status                                Json?
  created_at                                           DateTime?                          @db.DateTime(6)
  updated_at                                           DateTime?                          @db.DateTime(6)
  published_at                                         DateTime?                          @db.DateTime(6)
  created_by_id                                        Int?                               @db.UnsignedInt
  updated_by_id                                        Int?                               @db.UnsignedInt
  appointments_conversation_links                      appointments_conversation_links[]
  admin_users_conversations_created_by_idToadmin_users admin_users?                       @relation("conversations_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "conversations_created_by_id_fk")
  admin_users_conversations_updated_by_idToadmin_users admin_users?                       @relation("conversations_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "conversations_updated_by_id_fk")
  conversations_user_links                             conversations_user_links[]
  google_events_conversation_links                     google_events_conversation_links[]

  @@index([created_by_id], map: "conversations_created_by_id_fk")
  @@index([updated_by_id], map: "conversations_updated_by_id_fk")
}

model doctors {
  id                                             Int                          @id @default(autoincrement()) @db.UnsignedInt
  names                                          String?                      @db.VarChar(255)
  last_names                                     String?                      @db.VarChar(255)
  id_document                                    Int?
  birthday_date                                  DateTime?                    @db.Date
  created_at                                     DateTime?                    @db.DateTime(6)
  updated_at                                     DateTime?                    @db.DateTime(6)
  published_at                                   DateTime?                    @db.DateTime(6)
  created_by_id                                  Int?                         @db.UnsignedInt
  updated_by_id                                  Int?                         @db.UnsignedInt
  admin_users_doctors_created_by_idToadmin_users admin_users?                 @relation("doctors_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "doctors_created_by_id_fk")
  admin_users_doctors_updated_by_idToadmin_users admin_users?                 @relation("doctors_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "doctors_updated_by_id_fk")
  doctors_appointments_links                     doctors_appointments_links[]
  doctors_specialities_links                     doctors_specialities_links[]

  @@index([created_by_id], map: "doctors_created_by_id_fk")
  @@index([updated_by_id], map: "doctors_updated_by_id_fk")
}

model doctors_appointments_links {
  id                Int           @id @default(autoincrement()) @db.UnsignedInt
  doctor_id         Int?          @db.UnsignedInt
  appointment_id    Int?          @db.UnsignedInt
  appointment_order Float?
  doctor_order      Float?
  doctors           doctors?      @relation(fields: [doctor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "doctors_appointments_links_fk")
  appointments      appointments? @relation(fields: [appointment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "doctors_appointments_links_inv_fk")

  @@unique([doctor_id, appointment_id], map: "doctors_appointments_links_unique")
  @@index([doctor_id], map: "doctors_appointments_links_fk")
  @@index([appointment_id], map: "doctors_appointments_links_inv_fk")
  @@index([appointment_order], map: "doctors_appointments_links_order_fk")
  @@index([doctor_order], map: "doctors_appointments_links_order_inv_fk")
}

model doctors_specialities_links {
  id               Int           @id @default(autoincrement()) @db.UnsignedInt
  doctor_id        Int?          @db.UnsignedInt
  speciality_id    Int?          @db.UnsignedInt
  speciality_order Float?
  doctor_order     Float?
  doctors          doctors?      @relation(fields: [doctor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "doctors_specialities_links_fk")
  specialities     specialities? @relation(fields: [speciality_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "doctors_specialities_links_inv_fk")

  @@unique([doctor_id, speciality_id], map: "doctors_specialities_links_unique")
  @@index([doctor_id], map: "doctors_specialities_links_fk")
  @@index([speciality_id], map: "doctors_specialities_links_inv_fk")
  @@index([speciality_order], map: "doctors_specialities_links_order_fk")
  @@index([doctor_order], map: "doctors_specialities_links_order_inv_fk")
}

model files {
  id                                           Int                    @id @default(autoincrement()) @db.UnsignedInt
  name                                         String?                @db.VarChar(255)
  alternative_text                             String?                @db.VarChar(255)
  caption                                      String?                @db.VarChar(255)
  width                                        Int?
  height                                       Int?
  formats                                      Json?
  hash                                         String?                @db.VarChar(255)
  ext                                          String?                @db.VarChar(255)
  mime                                         String?                @db.VarChar(255)
  size                                         Decimal?               @db.Decimal(10, 2)
  url                                          String?                @db.VarChar(255)
  preview_url                                  String?                @db.VarChar(255)
  provider                                     String?                @db.VarChar(255)
  provider_metadata                            Json?
  folder_path                                  String?                @db.VarChar(255)
  created_at                                   DateTime?              @db.DateTime(6)
  updated_at                                   DateTime?              @db.DateTime(6)
  created_by_id                                Int?                   @db.UnsignedInt
  updated_by_id                                Int?                   @db.UnsignedInt
  admin_users_files_created_by_idToadmin_users admin_users?           @relation("files_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "files_created_by_id_fk")
  admin_users_files_updated_by_idToadmin_users admin_users?           @relation("files_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "files_updated_by_id_fk")
  files_folder_links                           files_folder_links[]
  files_related_morphs                         files_related_morphs[]

  @@index([created_by_id], map: "files_created_by_id_fk")
  @@index([updated_by_id], map: "files_updated_by_id_fk")
  @@index([created_at], map: "upload_files_created_at_index")
  @@index([ext], map: "upload_files_ext_index")
  @@index([folder_path], map: "upload_files_folder_path_index")
  @@index([name], map: "upload_files_name_index")
  @@index([size], map: "upload_files_size_index")
  @@index([updated_at], map: "upload_files_updated_at_index")
}

model files_folder_links {
  id             Int             @id @default(autoincrement()) @db.UnsignedInt
  file_id        Int?            @db.UnsignedInt
  folder_id      Int?            @db.UnsignedInt
  file_order     Float?
  files          files?          @relation(fields: [file_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "files_folder_links_fk")
  upload_folders upload_folders? @relation(fields: [folder_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "files_folder_links_inv_fk")

  @@unique([file_id, folder_id], map: "files_folder_links_unique")
  @@index([file_id], map: "files_folder_links_fk")
  @@index([folder_id], map: "files_folder_links_inv_fk")
  @@index([file_order], map: "files_folder_links_order_inv_fk")
}

model files_related_morphs {
  id           Int     @id @default(autoincrement()) @db.UnsignedInt
  file_id      Int?    @db.UnsignedInt
  related_id   Int?    @db.UnsignedInt
  related_type String? @db.VarChar(255)
  field        String? @db.VarChar(255)
  order        Float?
  files        files?  @relation(fields: [file_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "files_related_morphs_fk")

  @@index([file_id], map: "files_related_morphs_fk")
  @@index([related_id], map: "files_related_morphs_id_column_index")
  @@index([order], map: "files_related_morphs_order_index")
}

model google_events {
  id                                                   Int                                @id @default(autoincrement()) @db.UnsignedInt
  event_data                                           Json?
  event_id                                             String?                            @db.VarChar(255)
  reminder_reply_status                                Json?
  date                                                 DateTime?                          @db.Date
  created_at                                           DateTime?                          @db.DateTime(6)
  updated_at                                           DateTime?                          @db.DateTime(6)
  published_at                                         DateTime?                          @db.DateTime(6)
  created_by_id                                        Int?                               @db.UnsignedInt
  updated_by_id                                        Int?                               @db.UnsignedInt
  admin_users_google_events_created_by_idToadmin_users admin_users?                       @relation("google_events_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "google_events_created_by_id_fk")
  admin_users_google_events_updated_by_idToadmin_users admin_users?                       @relation("google_events_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "google_events_updated_by_id_fk")
  google_events_conversation_links                     google_events_conversation_links[]

  @@index([created_by_id], map: "google_events_created_by_id_fk")
  @@index([updated_by_id], map: "google_events_updated_by_id_fk")
}

model google_events_conversation_links {
  id              Int            @id @default(autoincrement()) @db.UnsignedInt
  google_event_id Int?           @db.UnsignedInt
  conversation_id Int?           @db.UnsignedInt
  google_events   google_events? @relation(fields: [google_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "google_events_conversation_links_fk")
  conversations   conversations? @relation(fields: [conversation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "google_events_conversation_links_inv_fk")

  @@unique([google_event_id, conversation_id], map: "google_events_conversation_links_unique")
  @@index([google_event_id], map: "google_events_conversation_links_fk")
  @@index([conversation_id], map: "google_events_conversation_links_inv_fk")
}

model i18n_locale {
  id                                                 Int          @id @default(autoincrement()) @db.UnsignedInt
  name                                               String?      @db.VarChar(255)
  code                                               String?      @db.VarChar(255)
  created_at                                         DateTime?    @db.DateTime(6)
  updated_at                                         DateTime?    @db.DateTime(6)
  created_by_id                                      Int?         @db.UnsignedInt
  updated_by_id                                      Int?         @db.UnsignedInt
  admin_users_i18n_locale_created_by_idToadmin_users admin_users? @relation("i18n_locale_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "i18n_locale_created_by_id_fk")
  admin_users_i18n_locale_updated_by_idToadmin_users admin_users? @relation("i18n_locale_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "i18n_locale_updated_by_id_fk")

  @@index([created_by_id], map: "i18n_locale_created_by_id_fk")
  @@index([updated_by_id], map: "i18n_locale_updated_by_id_fk")
}

model patients {
  id                                              Int                            @id @default(autoincrement()) @db.UnsignedInt
  names                                           String?                        @db.VarChar(255)
  last_names                                      String?                        @db.VarChar(255)
  mobile_number                                   String?                        @db.VarChar(255)
  email                                           String?                        @db.VarChar(255)
  birthday_date                                   DateTime?                      @db.Date
  phone_number                                    String?                        @db.VarChar(255)
  address                                         String?                        @db.VarChar(255)
  identity                                        Json?
  whatsapp                                        String?                        @db.VarChar(255)
  created_at                                      DateTime?                      @db.DateTime(6)
  updated_at                                      DateTime?                      @db.DateTime(6)
  published_at                                    DateTime?                      @db.DateTime(6)
  created_by_id                                   Int?                           @db.UnsignedInt
  updated_by_id                                   Int?                           @db.UnsignedInt
  appointments_patient_links                      appointments_patient_links[]
  admin_users_patients_created_by_idToadmin_users admin_users?                   @relation("patients_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "patients_created_by_id_fk")
  admin_users_patients_updated_by_idToadmin_users admin_users?                   @relation("patients_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "patients_updated_by_id_fk")
  patients_branch_office_links                    patients_branch_office_links[]
  patients_company_links                          patients_company_links[]

  @@index([created_by_id], map: "patients_created_by_id_fk")
  @@index([updated_by_id], map: "patients_updated_by_id_fk")
}

model patients_branch_office_links {
  id               Int             @id @default(autoincrement()) @db.UnsignedInt
  patient_id       Int?            @db.UnsignedInt
  branch_office_id Int?            @db.UnsignedInt
  patient_order    Float?
  patients         patients?       @relation(fields: [patient_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "patients_branch_office_links_fk")
  branch_offices   branch_offices? @relation(fields: [branch_office_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "patients_branch_office_links_inv_fk")

  @@unique([patient_id, branch_office_id], map: "patients_branch_office_links_unique")
  @@index([patient_id], map: "patients_branch_office_links_fk")
  @@index([branch_office_id], map: "patients_branch_office_links_inv_fk")
  @@index([patient_order], map: "patients_branch_office_links_order_inv_fk")
}

model patients_company_links {
  id            Int        @id @default(autoincrement()) @db.UnsignedInt
  patient_id    Int?       @db.UnsignedInt
  company_id    Int?       @db.UnsignedInt
  patient_order Float?
  patients      patients?  @relation(fields: [patient_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "patients_company_links_fk")
  companies     companies? @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "patients_company_links_inv_fk")

  @@unique([patient_id, company_id], map: "patients_company_links_unique")
  @@index([patient_id], map: "patients_company_links_fk")
  @@index([company_id], map: "patients_company_links_inv_fk")
  @@index([patient_order], map: "patients_company_links_order_inv_fk")
}

model payment_states {
  id                                                    Int                                @id @default(autoincrement()) @db.UnsignedInt
  name                                                  String?                            @db.VarChar(255)
  created_at                                            DateTime?                          @db.DateTime(6)
  updated_at                                            DateTime?                          @db.DateTime(6)
  published_at                                          DateTime?                          @db.DateTime(6)
  created_by_id                                         Int?                               @db.UnsignedInt
  updated_by_id                                         Int?                               @db.UnsignedInt
  appointments_payment_state_links                      appointments_payment_state_links[]
  admin_users_payment_states_created_by_idToadmin_users admin_users?                       @relation("payment_states_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "payment_states_created_by_id_fk")
  admin_users_payment_states_updated_by_idToadmin_users admin_users?                       @relation("payment_states_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "payment_states_updated_by_id_fk")

  @@index([created_by_id], map: "payment_states_created_by_id_fk")
  @@index([updated_by_id], map: "payment_states_updated_by_id_fk")
}

model specialities {
  id                                                  Int                             @id @default(autoincrement()) @db.UnsignedInt
  name                                                String?                         @db.VarChar(255)
  created_at                                          DateTime?                       @db.DateTime(6)
  updated_at                                          DateTime?                       @db.DateTime(6)
  published_at                                        DateTime?                       @db.DateTime(6)
  created_by_id                                       Int?                            @db.UnsignedInt
  updated_by_id                                       Int?                            @db.UnsignedInt
  appointments_speciality_links                       appointments_speciality_links[]
  doctors_specialities_links                          doctors_specialities_links[]
  admin_users_specialities_created_by_idToadmin_users admin_users?                    @relation("specialities_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "specialities_created_by_id_fk")
  admin_users_specialities_updated_by_idToadmin_users admin_users?                    @relation("specialities_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "specialities_updated_by_id_fk")

  @@index([created_by_id], map: "specialities_created_by_id_fk")
  @@index([updated_by_id], map: "specialities_updated_by_id_fk")
}

model strapi_api_token_permissions {
  id                                                                  Int                                        @id @default(autoincrement()) @db.UnsignedInt
  action                                                              String?                                    @db.VarChar(255)
  created_at                                                          DateTime?                                  @db.DateTime(6)
  updated_at                                                          DateTime?                                  @db.DateTime(6)
  created_by_id                                                       Int?                                       @db.UnsignedInt
  updated_by_id                                                       Int?                                       @db.UnsignedInt
  admin_users_strapi_api_token_permissions_created_by_idToadmin_users admin_users?                               @relation("strapi_api_token_permissions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "strapi_api_token_permissions_created_by_id_fk")
  admin_users_strapi_api_token_permissions_updated_by_idToadmin_users admin_users?                               @relation("strapi_api_token_permissions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "strapi_api_token_permissions_updated_by_id_fk")
  strapi_api_token_permissions_token_links                            strapi_api_token_permissions_token_links[]

  @@index([created_by_id], map: "strapi_api_token_permissions_created_by_id_fk")
  @@index([updated_by_id], map: "strapi_api_token_permissions_updated_by_id_fk")
}

model strapi_api_token_permissions_token_links {
  id                           Int                           @id @default(autoincrement()) @db.UnsignedInt
  api_token_permission_id      Int?                          @db.UnsignedInt
  api_token_id                 Int?                          @db.UnsignedInt
  api_token_permission_order   Float?
  strapi_api_token_permissions strapi_api_token_permissions? @relation(fields: [api_token_permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "strapi_api_token_permissions_token_links_fk")
  strapi_api_tokens            strapi_api_tokens?            @relation(fields: [api_token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "strapi_api_token_permissions_token_links_inv_fk")

  @@unique([api_token_permission_id, api_token_id], map: "strapi_api_token_permissions_token_links_unique")
  @@index([api_token_permission_id], map: "strapi_api_token_permissions_token_links_fk")
  @@index([api_token_id], map: "strapi_api_token_permissions_token_links_inv_fk")
  @@index([api_token_permission_order], map: "strapi_api_token_permissions_token_links_order_inv_fk")
}

model strapi_api_tokens {
  id                                                       Int                                        @id @default(autoincrement()) @db.UnsignedInt
  name                                                     String?                                    @db.VarChar(255)
  description                                              String?                                    @db.VarChar(255)
  type                                                     String?                                    @db.VarChar(255)
  access_key                                               String?                                    @db.VarChar(255)
  last_used_at                                             DateTime?                                  @db.DateTime(6)
  expires_at                                               DateTime?                                  @db.DateTime(6)
  lifespan                                                 BigInt?
  created_at                                               DateTime?                                  @db.DateTime(6)
  updated_at                                               DateTime?                                  @db.DateTime(6)
  created_by_id                                            Int?                                       @db.UnsignedInt
  updated_by_id                                            Int?                                       @db.UnsignedInt
  strapi_api_token_permissions_token_links                 strapi_api_token_permissions_token_links[]
  admin_users_strapi_api_tokens_created_by_idToadmin_users admin_users?                               @relation("strapi_api_tokens_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "strapi_api_tokens_created_by_id_fk")
  admin_users_strapi_api_tokens_updated_by_idToadmin_users admin_users?                               @relation("strapi_api_tokens_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "strapi_api_tokens_updated_by_id_fk")

  @@index([created_by_id], map: "strapi_api_tokens_created_by_id_fk")
  @@index([updated_by_id], map: "strapi_api_tokens_updated_by_id_fk")
}

model strapi_core_store_settings {
  id          Int     @id @default(autoincrement()) @db.UnsignedInt
  key         String? @db.VarChar(255)
  value       String? @db.LongText
  type        String? @db.VarChar(255)
  environment String? @db.VarChar(255)
  tag         String? @db.VarChar(255)
}

model strapi_database_schema {
  id     Int       @id @default(autoincrement()) @db.UnsignedInt
  schema Json?
  time   DateTime? @db.DateTime(0)
  hash   String?   @db.VarChar(255)
}

model strapi_migrations {
  id   Int       @id @default(autoincrement()) @db.UnsignedInt
  name String?   @db.VarChar(255)
  time DateTime? @db.DateTime(0)
}

model strapi_transfer_token_permissions {
  id                                                                       Int                                             @id @default(autoincrement()) @db.UnsignedInt
  action                                                                   String?                                         @db.VarChar(255)
  created_at                                                               DateTime?                                       @db.DateTime(6)
  updated_at                                                               DateTime?                                       @db.DateTime(6)
  created_by_id                                                            Int?                                            @db.UnsignedInt
  updated_by_id                                                            Int?                                            @db.UnsignedInt
  admin_users_strapi_transfer_token_permissions_created_by_idToadmin_users admin_users?                                    @relation("strapi_transfer_token_permissions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "strapi_transfer_token_permissions_created_by_id_fk")
  admin_users_strapi_transfer_token_permissions_updated_by_idToadmin_users admin_users?                                    @relation("strapi_transfer_token_permissions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "strapi_transfer_token_permissions_updated_by_id_fk")
  strapi_transfer_token_permissions_token_links                            strapi_transfer_token_permissions_token_links[]

  @@index([created_by_id], map: "strapi_transfer_token_permissions_created_by_id_fk")
  @@index([updated_by_id], map: "strapi_transfer_token_permissions_updated_by_id_fk")
}

model strapi_transfer_token_permissions_token_links {
  id                                Int                                @id @default(autoincrement()) @db.UnsignedInt
  transfer_token_permission_id      Int?                               @db.UnsignedInt
  transfer_token_id                 Int?                               @db.UnsignedInt
  transfer_token_permission_order   Float?
  strapi_transfer_token_permissions strapi_transfer_token_permissions? @relation(fields: [transfer_token_permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "strapi_transfer_token_permissions_token_links_fk")
  strapi_transfer_tokens            strapi_transfer_tokens?            @relation(fields: [transfer_token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "strapi_transfer_token_permissions_token_links_inv_fk")

  @@unique([transfer_token_permission_id, transfer_token_id], map: "strapi_transfer_token_permissions_token_links_unique")
  @@index([transfer_token_permission_id], map: "strapi_transfer_token_permissions_token_links_fk")
  @@index([transfer_token_id], map: "strapi_transfer_token_permissions_token_links_inv_fk")
  @@index([transfer_token_permission_order], map: "strapi_transfer_token_permissions_token_links_order_inv_fk")
}

model strapi_transfer_tokens {
  id                                                            Int                                             @id @default(autoincrement()) @db.UnsignedInt
  name                                                          String?                                         @db.VarChar(255)
  description                                                   String?                                         @db.VarChar(255)
  access_key                                                    String?                                         @db.VarChar(255)
  last_used_at                                                  DateTime?                                       @db.DateTime(6)
  expires_at                                                    DateTime?                                       @db.DateTime(6)
  lifespan                                                      BigInt?
  created_at                                                    DateTime?                                       @db.DateTime(6)
  updated_at                                                    DateTime?                                       @db.DateTime(6)
  created_by_id                                                 Int?                                            @db.UnsignedInt
  updated_by_id                                                 Int?                                            @db.UnsignedInt
  strapi_transfer_token_permissions_token_links                 strapi_transfer_token_permissions_token_links[]
  admin_users_strapi_transfer_tokens_created_by_idToadmin_users admin_users?                                    @relation("strapi_transfer_tokens_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "strapi_transfer_tokens_created_by_id_fk")
  admin_users_strapi_transfer_tokens_updated_by_idToadmin_users admin_users?                                    @relation("strapi_transfer_tokens_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "strapi_transfer_tokens_updated_by_id_fk")

  @@index([created_by_id], map: "strapi_transfer_tokens_created_by_id_fk")
  @@index([updated_by_id], map: "strapi_transfer_tokens_updated_by_id_fk")
}

model strapi_webhooks {
  id      Int      @id @default(autoincrement()) @db.UnsignedInt
  name    String?  @db.VarChar(255)
  url     String?  @db.LongText
  headers Json?
  events  Json?
  enabled Boolean?
}

model up_permissions {
  id                                                    Int                         @id @default(autoincrement()) @db.UnsignedInt
  action                                                String?                     @db.VarChar(255)
  created_at                                            DateTime?                   @db.DateTime(6)
  updated_at                                            DateTime?                   @db.DateTime(6)
  created_by_id                                         Int?                        @db.UnsignedInt
  updated_by_id                                         Int?                        @db.UnsignedInt
  admin_users_up_permissions_created_by_idToadmin_users admin_users?                @relation("up_permissions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "up_permissions_created_by_id_fk")
  admin_users_up_permissions_updated_by_idToadmin_users admin_users?                @relation("up_permissions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "up_permissions_updated_by_id_fk")
  up_permissions_role_links                             up_permissions_role_links[]

  @@index([created_by_id], map: "up_permissions_created_by_id_fk")
  @@index([updated_by_id], map: "up_permissions_updated_by_id_fk")
}

model up_permissions_role_links {
  id               Int             @id @default(autoincrement()) @db.UnsignedInt
  permission_id    Int?            @db.UnsignedInt
  role_id          Int?            @db.UnsignedInt
  permission_order Float?
  up_permissions   up_permissions? @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "up_permissions_role_links_fk")
  up_roles         up_roles?       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "up_permissions_role_links_inv_fk")

  @@unique([permission_id, role_id], map: "up_permissions_role_links_unique")
  @@index([permission_id], map: "up_permissions_role_links_fk")
  @@index([role_id], map: "up_permissions_role_links_inv_fk")
  @@index([permission_order], map: "up_permissions_role_links_order_inv_fk")
}

model up_roles {
  id                                              Int                         @id @default(autoincrement()) @db.UnsignedInt
  name                                            String?                     @db.VarChar(255)
  description                                     String?                     @db.VarChar(255)
  type                                            String?                     @db.VarChar(255)
  created_at                                      DateTime?                   @db.DateTime(6)
  updated_at                                      DateTime?                   @db.DateTime(6)
  created_by_id                                   Int?                        @db.UnsignedInt
  updated_by_id                                   Int?                        @db.UnsignedInt
  up_permissions_role_links                       up_permissions_role_links[]
  admin_users_up_roles_created_by_idToadmin_users admin_users?                @relation("up_roles_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "up_roles_created_by_id_fk")
  admin_users_up_roles_updated_by_idToadmin_users admin_users?                @relation("up_roles_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "up_roles_updated_by_id_fk")
  up_users_role_links                             up_users_role_links[]

  @@index([created_by_id], map: "up_roles_created_by_id_fk")
  @@index([updated_by_id], map: "up_roles_updated_by_id_fk")
}

model up_users {
  id                                              Int                        @id @default(autoincrement()) @db.UnsignedInt
  username                                        String?                    @db.VarChar(255)
  email                                           String?                    @db.VarChar(255)
  provider                                        String?                    @db.VarChar(255)
  password                                        String?                    @db.VarChar(255)
  reset_password_token                            String?                    @db.VarChar(255)
  confirmation_token                              String?                    @db.VarChar(255)
  confirmed                                       Boolean?
  blocked                                         Boolean?
  created_at                                      DateTime?                  @db.DateTime(6)
  updated_at                                      DateTime?                  @db.DateTime(6)
  created_by_id                                   Int?                       @db.UnsignedInt
  updated_by_id                                   Int?                       @db.UnsignedInt
  reminders_config                                Json?
  gg_token                                        String?                    @db.LongText
  google_session                                  Json?
  companies_users_links                           companies_users_links[]
  conversations_user_links                        conversations_user_links[]
  admin_users_up_users_created_by_idToadmin_users admin_users?               @relation("up_users_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "up_users_created_by_id_fk")
  admin_users_up_users_updated_by_idToadmin_users admin_users?               @relation("up_users_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "up_users_updated_by_id_fk")
  up_users_role_links                             up_users_role_links[]

  @@index([created_by_id], map: "up_users_created_by_id_fk")
  @@index([updated_by_id], map: "up_users_updated_by_id_fk")
}

model up_users_role_links {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id    Int?      @db.UnsignedInt
  role_id    Int?      @db.UnsignedInt
  user_order Float?
  up_users   up_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "up_users_role_links_fk")
  up_roles   up_roles? @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "up_users_role_links_inv_fk")

  @@unique([user_id, role_id], map: "up_users_role_links_unique")
  @@index([user_id], map: "up_users_role_links_fk")
  @@index([role_id], map: "up_users_role_links_inv_fk")
  @@index([user_order], map: "up_users_role_links_order_inv_fk")
}

model upload_folders {
  id                                                                                    Int                           @id @default(autoincrement()) @db.UnsignedInt
  name                                                                                  String?                       @db.VarChar(255)
  path_id                                                                               Int?                          @unique(map: "upload_folders_path_id_index")
  path                                                                                  String?                       @unique(map: "upload_folders_path_index") @db.VarChar(255)
  created_at                                                                            DateTime?                     @db.DateTime(6)
  updated_at                                                                            DateTime?                     @db.DateTime(6)
  created_by_id                                                                         Int?                          @db.UnsignedInt
  updated_by_id                                                                         Int?                          @db.UnsignedInt
  files_folder_links                                                                    files_folder_links[]
  admin_users_upload_folders_created_by_idToadmin_users                                 admin_users?                  @relation("upload_folders_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "upload_folders_created_by_id_fk")
  admin_users_upload_folders_updated_by_idToadmin_users                                 admin_users?                  @relation("upload_folders_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "upload_folders_updated_by_id_fk")
  upload_folders_parent_links_upload_folders_parent_links_folder_idToupload_folders     upload_folders_parent_links[] @relation("upload_folders_parent_links_folder_idToupload_folders")
  upload_folders_parent_links_upload_folders_parent_links_inv_folder_idToupload_folders upload_folders_parent_links[] @relation("upload_folders_parent_links_inv_folder_idToupload_folders")

  @@index([created_by_id], map: "upload_folders_created_by_id_fk")
  @@index([updated_by_id], map: "upload_folders_updated_by_id_fk")
}

model upload_folders_parent_links {
  id                                                                       Int             @id @default(autoincrement()) @db.UnsignedInt
  folder_id                                                                Int?            @db.UnsignedInt
  inv_folder_id                                                            Int?            @db.UnsignedInt
  folder_order                                                             Float?
  upload_folders_upload_folders_parent_links_folder_idToupload_folders     upload_folders? @relation("upload_folders_parent_links_folder_idToupload_folders", fields: [folder_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "upload_folders_parent_links_fk")
  upload_folders_upload_folders_parent_links_inv_folder_idToupload_folders upload_folders? @relation("upload_folders_parent_links_inv_folder_idToupload_folders", fields: [inv_folder_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "upload_folders_parent_links_inv_fk")

  @@unique([folder_id, inv_folder_id], map: "upload_folders_parent_links_unique")
  @@index([folder_id], map: "upload_folders_parent_links_fk")
  @@index([inv_folder_id], map: "upload_folders_parent_links_inv_fk")
  @@index([folder_order], map: "upload_folders_parent_links_order_inv_fk")
}

model conversations_user_links {
  id                 Int            @id @default(autoincrement()) @db.UnsignedInt
  conversation_id    Int?           @db.UnsignedInt
  user_id            Int?           @db.UnsignedInt
  event_id           String?        @db.VarChar(255)
  conversation_order Float?
  conversations      conversations? @relation(fields: [conversation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "conversations_user_links_fk")
  up_users           up_users?      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "conversations_user_links_inv_fk")

  @@unique([conversation_id, user_id, event_id], map: "conversations_user_links_unique")
  @@index([conversation_id], map: "conversations_user_links_fk")
  @@index([user_id], map: "conversations_user_links_inv_fk")
  @@index([conversation_order], map: "conversations_user_links_order_inv_fk")
}
